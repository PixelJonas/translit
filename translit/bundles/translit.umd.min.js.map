{
  "version": 3,
  "file": "translit.umd.min.js",
  "sources": [
    "ng://translit/out/src/model/translit.config.ts",
    "ng://translit/out/src/translit/translit.directive.ts",
    "ng://translit/out/src/translit.module.ts"
  ],
  "sourcesContent": [
    "import { InjectionToken } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nexport interface TranslitConfig {\r\n  [key: string]: string | object;\r\n};\r\n\r\nexport const LIT_CONFIG = new InjectionToken<Observable<TranslitConfig>>('lit.config');\r\n",
    "import { Directive, ElementRef, Inject } from '@angular/core';\r\nimport { LIT_CONFIG, TranslitConfig } from \"../model/translit.config\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Directive({\r\n  selector: '[lit-translate]'\r\n})\r\nexport class TranslitDirective {\r\n\r\n  constructor(el: ElementRef, @Inject(LIT_CONFIG) private config: Observable<TranslitConfig>) {\r\n    el.nativeElement.style.backgroundColor = 'blue';\r\n    config.subscribe((conf) => {\r\n      Object.keys(this.config).forEach((key) => console.log(key));\r\n    })\r\n  }\r\n\r\n}\r\n",
    "import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslitDirective } from './translit/translit.directive';\r\nimport { LIT_CONFIG, TranslitConfig } from \"./model/translit.config\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [TranslitDirective],\r\n  exports: [TranslitDirective],\r\n})\r\nexport class TranslitModule {\r\n\r\n  forRoot(config: Observable<TranslitConfig>): ModuleWithProviders {\r\n    return {\r\n      ngModule: TranslitModule,\r\n      providers: [\r\n        {\r\n          provide: LIT_CONFIG,\r\n          useValue: config,\r\n        },\r\n      ],\r\n    }\r\n  }\r\n}\r\n"
  ],
  "names": [
    "LIT_CONFIG",
    "InjectionToken",
    "TranslitDirective",
    "el",
    "config",
    "_this",
    "this",
    "nativeElement",
    "style",
    "backgroundColor",
    "subscribe",
    "conf",
    "Object",
    "keys",
    "forEach",
    "key",
    "console",
    "log",
    "type",
    "Directive",
    "args",
    "selector",
    "ElementRef",
    "Observable",
    "decorators",
    "Inject",
    "TranslitModule",
    "prototype",
    "forRoot",
    "ngModule",
    "providers",
    "provide",
    "useValue",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "+VAOA,IAAaA,EAAa,IAAIC,EAAAA,eAA2C,cCPzEC,EASE,SAAYC,EAA4CC,GAAxD,IAAFC,EAAAC,KAA0DA,KAA1DF,OAA0DA,EACtDD,EAAGI,cAAcC,MAAMC,gBAAkB,OACzCL,EAAOM,UAAU,SAACC,GAChBC,OAAOC,KAAKR,EAAKD,QAAQU,QAAQ,SAACC,GAAQ,OAAAC,QAAQC,IAAIF,uBAR5DG,KAACC,EAAAA,UAADC,OACEC,SAAU,0DALZH,KAAoBI,EAAAA,aAEpBJ,KAASK,EAAAA,WAATC,aAAAN,KAO+BO,EAAAA,OAP/BL,MAOsCpB,QCTtC,IAAA0B,EAAA,WAAA,SAAAA,YAaEA,EAAFC,UAAAC,QAAE,SAAQxB,GACN,OACEyB,SAAUH,EACVI,YAEIC,QAAS/B,EACTgC,SAAU5B,QAnBpB,kBAMAc,KAACe,EAAAA,SAADb,OACEc,SAAUC,EAAAA,cACVC,cAAelC,GACfmC,SAAUnC"
}
